---@class TES3MP
local api

---Check whether a certain file exists.
---
---Whenever you want to enforce case insensitivity, use
---@param filePath string
---@return boolean
function api.DoesFileExist(filePath) end

---Get the first filename in a folder that has a case insensitive match with the filename argument.
---
---This is used to retain case insensitivity when opening data files on Linux.
---@param folderPath string
---@param filename string
---@return string
function api.GetCaseInsensitiveFilename(folderPath, filename) end

---Get the last player ID currently connected to the server.
---
---Every player receives a unique numerical index known as their player ID upon joining the server.
---@return number
function api.GetLastPlayerId() end

---Get the current (latest) mpNum generated by the server.
---
---When ObjectPlace and ObjectSpawn packets are received from players, their objects lack mpNums, so the server assigns them some based on incrementing the server's current mpNum, with the operation's final mpNum becoming the server's new current mpNum.
---@return number
function api.GetCurrentMpNum() end

---Set the current (latest) mpNum generated by the server.
---
---When restarting a server, it is important to revert to the previous current (latest) mpNum as stored in the server's data, so as to avoid starting over from 0 and ending up assigning duplicate mpNums to objects.
---@param mpNum number @The number that should be used as the new current mpNum.
function api.SetCurrentMpNum(mpNum) end

---Write a log message with its own timestamp.
---
---It will have "[Script]:" prepended to it so as to mark it as a script-generated log message.
---@param level number @The logging level used (0 for LOG_VERBOSE, 1 for LOG_INFO, 2 for LOG_WARN, 3 for LOG_ERROR, 4 for LOG_FATAL).
---@param message string @The message logged.
function api.LogMessage(level, message) end

---Write a log message without its own timestamp.
---
---It will have "[Script]:" prepended to it so as to mark it as a script-generated log message.
---@param level number @The logging level used (0 for LOG_VERBOSE, 1 for LOG_INFO, 2 for LOG_WARN, 3 for LOG_ERROR, 4 for LOG_FATAL).
---@param message string @The message logged.
function api.LogAppend(level, message) end
